<?xml version="1.0" encoding="UTF-8"?>

<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:cxf="http://camel.apache.org/schema/cxf" 
	xmlns:ctx="http://www.springframework.org/schema/context" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:nc20="http://niem.gov/niem/niem-core/2.0"
	xmlns:s="http://niem.gov/niem/structures/2.0"
	xmlns:pcext="http://ojbc.org/IEPD/Extensions/ProbationCase/1.0"
	xmlns:jxdm41="http://niem.gov/niem/domains/jxdm/4.1"
	xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://www.springframework.org/schema/util
	   http://www.springframework.org/schema/util/spring-util.xsd
       ">
	<!-- needed cxf imports -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	
	<camel:camelContext xmlns="http://camel.apache.org/schema/spring">
		<endpoint id="inputDir"
			uri="file:///${publishSubscribe.probationIntermediaryDirectory}/input?idempotent=true&amp;moveFailed=${publishSubscribe.probationIntermediaryDirectory}/error&amp;move=processed/" />

		<!-- Probation Service File Handler -->
		<camel:route>
			<camel:from uri="inputDir" />
			<camel:log message="This is the body the service received: ${body}" />
			<camel:log message="THIS IS THE OPERATION:, ${in.header.operationName}" />
			<camel:to uri="direct:processProbationDocument" />
		</camel:route>

		<!-- Probation Service Handler -->
		<camel:route>
			<camel:from
				uri="probationEventHandlerServiceEndpoint" />
			<camel:convertBodyTo type="java.lang.String" />
			<camel:log message="This is the body the service received: ${body}" loggingLevel="DEBUG"/>
			<camel:to uri="direct:processProbationDocument" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:processProbationDocument" />
			<camel:log message="processing probation document" />

			<camel:setHeader headerName="officerEmailAddress">
				<camel:xpath>//nc20:ContactInformation/nc20:ContactEmailID/text()</camel:xpath>
			</camel:setHeader>

			<camel:setHeader headerName="systemName">
				<camel:xpath>//pcext:SystemName/text()</camel:xpath>
			</camel:setHeader>

			<camel:to uri="bean:systemNameToTopicExpressionMapper?method=populateTopicExpressionHeader" />
			
			<camel:choice>
				<camel:when>
					<simple>${in.headers.officerEmailAddress} == '' and ${in.header.operationName} == 'Report-Probation-Case-Initiation'</simple>
					<camel:log message="No email address could be located for record"/>
				</camel:when>
				<camel:otherwise>
					<camel:to uri="direct:processOperation"/>
				</camel:otherwise>
			</camel:choice>

		</camel:route>

		<camel:route>
			<camel:from uri="direct:processOperation"/>
			
			<camel:filter>
				<camel:simple>${in.header.operationName} == 'Report-Probation-Case-Initiation'</camel:simple>
				<camel:to uri="direct:transformAndInvokeSubscriptionProcessor" />
			</camel:filter>

			<camel:filter>
				<camel:simple>${in.header.operationName} == 'Report-Probation-Case-Termination'</camel:simple>
				<camel:to uri="direct:transformAndInvokeUnsubscriptionProcessor" />
			</camel:filter>
		</camel:route>

		<camel:route>
			<camel:from uri="direct:transformAndInvokeSubscriptionProcessor" />
			<camel:to uri="xslt:xslt/probationDocumentToSubscription.xsl" />
			<camel:log message="After transform subscription: ${body}" />
			
			<camel:to uri="bean:messageProcessor?method=prepareNewSimpleExchangeResponseMessage"/>
			
			<camel:setHeader headerName="operationNamespace"><constant>http://docs.oasis-open.org/wsn/brw-2</constant></camel:setHeader>
			<camel:setHeader headerName="operationName"><constant>Subscribe</constant></camel:setHeader>	
			
			<camel:to
				uri="notificationBrokerServiceEndpoint" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:transformAndInvokeUnsubscriptionProcessor" />
			<camel:to uri="xslt:xslt/probationDocumentToUnsubscription.xsl" />
			<camel:log message="After transform unsubscription: ${body}" />
			
			<camel:to uri="bean:messageProcessor?method=prepareNewSimpleExchangeResponseMessage"/>
			
			<camel:setHeader headerName="operationNamespace"><constant>http://docs.oasis-open.org/wsn/bw-2</constant></camel:setHeader>
			<camel:setHeader headerName="operationName"><constant>Unsubscribe</constant></camel:setHeader>	
			
			<camel:to
				uri="subscriptionManagerServiceEndpoint" />
		</camel:route>
	</camel:camelContext>


	<bean id="messageProcessor" class="org.ojbc.util.camel.processor.SimpleMessageProcessor" />
	
	<bean id="systemNameToTopicExpressionMapper" class="org.ojbc.util.camel.processor.SystemNameToTopicExpressionMapper">
		<property name="systemNameToTopicMap" ref="systemNameToTopicMap" />
	</bean>
	
	<!-- Only use this setting when doing a bulk load, otherwise comment it out. -->
    <bean id="cxf.default.workqueue" class="org.apache.cxf.workqueue.AutomaticWorkQueueImpl">
        <property name="name" value="default" />
        <property name="queueSize" value="2048" />
    </bean>

</beans>
